import os
Import('env')  # Import the environment from SConstruct

# Add include paths
engine_env = env.Clone()
engine_env.Append(
    CPPPATH=['include', 'src'],
    CPPDEFINES=['QEXPORT'],
    # LIBS=['user32']
)
engine_env['LIBS'].extend(['user32.lib'])

source_dirs = [
    'src/core/',
    'src/platform/',
    'src/renderer/',
    'src/renderer/vulkan/',
    'src/renderer/dx12/',
]

sources = Glob('src/*.cc')
for dir in source_dirs:
    sources += Glob(f'{dir}*.cc')
    # print(dir)
    # print(Glob(f'{dir}*.cc'))

# Source files for the library
# sources = Glob( 'src/core/*.cc' ) + Glob( 'src/platform/*.cc' ) + Glob( 'src/renderer/*.cc' )

# Build the library (static or shared)
lib = engine_env.Library(target='engine', source=sources)
# lib = engine_env.SharedLibrary(target='engine', source=sources)

# Export the library and include paths for other projects
Export('lib', 'engine_env')